import numpy as np, pylab as pl, pyfits as py
import pymc
import myEmcee_blobs as myEmcee
import cPickle
from tools import solarmag
from stellarpop import distances

magv,magi,magk,v_src,i_src,k_src,muv2,mui,muk = np.load('/data/ljo31/Lens/LensParams/got_phot_212_srcs_z0.npy')
magv,magi,magk,v_src,i_src,k_src,muv1,mui,muk = np.load('/data/ljo31/Lens/LensParams/got_phot_211_srcs_z0.npy')

phot = py.open('/data/ljo31/Lens/LensParams/Phot_2src_new.fits')[1].data
reA,rel,reu = phot['Re v'], phot['Re v lo'], phot['Re v hi']
dre = np.mean((rel,reu),axis=0)
muA,mul,muu = phot['mu v'], phot['mu v lo'], phot['mu v hi']
dmu = np.mean((mul,muu),axis=0)

phot = py.open('/data/ljo31/Lens/LensParams/Phot_1src_new.fits')[1].data
reB,rel,reu = phot['Re v'], phot['Re v lo'], phot['Re v hi']
dre = np.mean((rel,reu),axis=0)
muB,mul,muu = phot['mu v'], phot['mu v lo'], phot['mu v hi']
dmu = np.mean((mul,muu),axis=0)

fp = np.load('/data/ljo31b/EELs/esi/kinematics/inference/results.npy')
l,m,u = fp
d = np.mean((l,u),axis=0)
dvl,dvs,dsigmal,dsigmas = d.T
vl,vs,sigmal,sigmas = m.T
sigmas /= 100.
sigmal /= 100.
dsigmas /= 100.
dsigmal /= 100.
# remove J1248 as we don't have photometry
sigmas,sigmal,dsigmas,dsigmal = np.delete(sigmas,6), np.delete(sigmal,6),np.delete(dsigmas,6),np.delete(dsigmal,6)

def scat(x,y):
    pl.scatter(x,y,color='SteelBlue',s=40,alpha=0.5)

# 1 source z0
pl.figure()
scat(1.2*np.log10(sigmas)+0.32*muv1,np.log10(reB))
pl.title('1 src z0')

# 2 src z0
pl.figure()
scat(1.2*np.log10(sigmas)+0.32*muv2,np.log10(reA))
pl.title('2 src z0')


# 1 source zs
pl.figure()
scat(1.2*np.log10(sigmas)+0.32*muB,np.log10(reB))
pl.title('1 src zs')

# 2 src zs
pl.figure()
scat(1.2*np.log10(sigmas)+0.32*muA,np.log10(reA))
pl.title('2 src zs')

